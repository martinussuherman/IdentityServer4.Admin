@using Microsoft.AspNetCore.Mvc.Localization
@using Skoruba.IdentityServer4.STS.Identity.Configuration.Interfaces
@using Skoruba.IdentityServer4.STS.Identity.Helpers.Localization
@inject IViewLocalizer Localizer
@inject IRootConfiguration RootConfiguration
@model Skoruba.IdentityServer4.STS.Identity.ViewModels.Account.LoginViewModel

@{
    Layout = "_SimyanfarLayout";
}

<div class="container center-container">
    <div class="page-header">
        <img src='@Url.Content("~/images/logo-simyanfar.png")' />
    </div>

    @if (Model.EnableLocalLogin)
    {
        <div class="card mt-3 round-2em bg-white-80">
            <div class="card-header">
                <h2>@ViewData["Title"]</h2>
                <h4>@Localizer["LocalLogin"]</h4>
            </div>

            <div class="card-body">
                @await Html.PartialAsync("_ValidationSummary")

                <form asp-route="Login">
                    <input type="hidden" asp-for="ReturnUrl" />

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="input-username">
                                    <i class="fa fa-user"></i>
                                </span>
                            </div>
                            <input class="form-control" placeholder="@Localizer[LoginPolicyResolutionLocalizer.GetUserNameLocalizationKey(Model.LoginResolutionPolicy)]" asp-for="Username" aria-label="Username" aria-describedby="input-username" autofocus>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="input-password">
                                    <span class="oi oi-lock-locked" title="Lock" aria-hidden="true"></span>
                                </span>
                            </div>
                            <input type="password" class="form-control" placeholder="@Localizer["Password"]" aria-label="Password" aria-describedby="input-password" asp-for="Password" autocomplete="off">
                        </div>

                        <a asp-action="ForgotPassword" asp-controller="Account" class="text-danger" value="forgot">@Localizer["Forgot"]</a>
                    </div>

                    @if (Model.AllowRememberLogin)
                    {
                        <div class="form-group login-remember row">
                            <div class="col-sm-9">
                                <div>
                                    @Localizer["Remember"]
                                </div>
                                <toggle-button>
                                    <input asp-for="RememberLogin" type="checkbox">
                                </toggle-button>
                            </div>
                        </div>
                    }

                    <button class="btn btn-primary btn-block round-2em" name="button" value="login">@Localizer["Login"]</button>

                    @if (RootConfiguration.RegisterConfiguration.Enabled)
                    {
                        <a asp-action="Register" asp-controller="Account" class="btn btn-dark btn-block round-2em" value="forgot">@Localizer["Register"]</a>
                    }

                    @if(Model.RequireConfirmedAccount)
                    {
                        <a asp-action="DisplayResendEmailForm" asp-controller="Account" class="btn text-primary">@Localizer["ResendConfirmation"]</a>
                    }
                </form>
            </div>
        </div>
    }

    @if (Model.VisibleExternalProviders.Any())
    {
        <div class="col external-providers">
            <div class="card mt-3">
                <h5 class="card-header">@Localizer["ExternalLogin"]</h5>
                <div class="card-body">
                    <ul class="list-inline">
                        @foreach (var provider in Model.VisibleExternalProviders)
                        {
                            <li class="list-inline-item">
                                <a class="btn btn-primary"
                                    asp-action="ExternalLogin"
                                    asp-route-provider="@provider.AuthenticationScheme"
                                    asp-route-returnUrl="@Model.ReturnUrl">
                                    @provider.DisplayName
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    @if (!Model.EnableLocalLogin && !Model.VisibleExternalProviders.Any())
    {
        <div class="alert alert-warning">
            <strong>@Localizer["InvalidRequest"]</strong>
            @Localizer["NoSchema"]
        </div>
    }
</div>
